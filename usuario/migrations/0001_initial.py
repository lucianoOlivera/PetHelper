# Generated by Django 3.2.6 on 2021-12-10 14:36

import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('username', models.CharField(max_length=25, unique=True)),
                ('permiso', models.PositiveSmallIntegerField(choices=[(1, 'Helper'), (2, 'Veterinario'), (3, 'Organizacion'), (4, 'Clinica')], default=1, null=True)),
                ('apellido', models.CharField(max_length=25)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('DNI', models.CharField(default='', max_length=8, validators=[django.core.validators.RegexValidator(message='El formato de DNI debe tener 8 caracteres numericos', regex='^[\\d]{1,3}\\.?[\\d]{3,3}\\.?[\\d]{3,3}$')])),
                ('foto', models.ImageField(blank=True, null=True, upload_to='usuario')),
                ('telefono', models.CharField(default='', help_text='Ejemplo: 2614247398', max_length=10, null=True)),
                ('direccion', models.CharField(blank=True, help_text='Ejemplo: Maipu 123, Godoy Cruz, Mendoza', max_length=100, null=True)),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('is_staff', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
